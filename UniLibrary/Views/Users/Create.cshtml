@model UniLibrary.ViewModels.RegisterViewModel

@{
    var status = Context.Request.Query["status"];
    switch (status)
    {
        case "Create":
            ViewData["Title"] = "Create";
            break;
        case "Register":
            ViewData["Title"] = "Register";
            break;
        default:
            break;
    }
}


<div class="p-3">
    <div class="row pt-4">
        <div class="col-6">
            @switch (status)
            {
                case "Create":
                    <h2 class="text-primary">Create User</h2>
                    break;
                default:
                    <h2 class="text-primary">Register User</h2>
                    break;
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="StudentID" class="control-label"></label>
                    <input asp-for="StudentID" class="form-control" />
                    <span asp-validation-for="StudentID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="control-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger>"></span>
                </div>
                <div class="form-group">
                    @switch (status)
                    {
                        case "Create":
                            <input type="submit" value="Save" class="btn btn-primary" asp-route-status="Create" />
                            <span>|</span>
                            <a asp-action="Index" class="btn btn-outline-primary">Back to List</a>
                            break;
                        default:
                            <input type="submit" value="Save" class="btn btn-primary" asp-route-status="Login" />
                            break;

                    }
                </div>
            </form>
        </div>
    </div>
</div>


@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}